package main

//#include "winapi_definitions.h"
import "C"
import (
	"unsafe"
)

/*
CLARIFICATION
=============
glBegin on Windows has stdcall calling convention,
which means that golang cannot place his own cdecl function,
therefore I had to write this assembler code to wrap the
HOOK_glBegin function in a secure environment...
*/
var gpAssembler_glBegin = []byte{
	0x55,       //PUSH EBP
	0x8B, 0xEC, //MOV EBP,ESP
	0x8B, 0x45, 0x08, // MOV EAX, DWORD PTR SS:[EBP+8]
	0x50,                         // PUSH EAX
	0xB8, 0xFF, 0xFF, 0xFF, 0xFF, // MOV EAX, (ADDRESS OF HOOK_glBegin)
	0xFF, 0xD0, // CALL EAX
	0x83, 0xC4, 0x04, // ADD ESP, 4
	0x8B, 0xE5, // MOV ESP, EBP
	0x5D,             // POP EBP
	0xC2, 0x04, 0x00, // RET 4
}

const gLenghtOfGateway_glBegin = 23

var gpGateway_glBegin unsafe.Pointer = nil

var gpQGLBegin uintptr = 0

func HookEverything() bool {
	if g_hThisDll != 0 {
		szGLBegin := C.CString("HOOK_glBegin")
		dwGLBegin := C.GetProcAddress(g_hThisDll, szGLBegin)
		C.free(unsafe.Pointer(szGLBegin))
		if dwGLBegin != 0 {
			gpGateway_glBegin = unsafe.Pointer(C.VirtualAlloc(C.DWORD(0), C.DWORD(len(gpAssembler_glBegin)), C.DWORD(C.MEM_COMMIT|C.MEM_RESERVE), C.DWORD(C.PAGE_EXECUTE_READWRITE)))
			if gpGateway_glBegin != nil {
				//https://stackoverflow.com/questions/32223562/how-to-convert-uintptr-to-byte-in-golang
				memcpy((*[gLenghtOfGateway_glBegin]byte)(gpGateway_glBegin)[:], gpAssembler_glBegin, len(gpAssembler_glBegin))
				((*[gLenghtOfGateway_glBegin]byte)(gpGateway_glBegin)[:])[8] = byte(dwGLBegin & 0x000000FF)
				((*[gLenghtOfGateway_glBegin]byte)(gpGateway_glBegin)[:])[9] = byte((dwGLBegin & 0x0000FF00) >> 8)
				((*[gLenghtOfGateway_glBegin]byte)(gpGateway_glBegin)[:])[10] = byte((dwGLBegin & 0x00FF0000) >> 16)
				((*[gLenghtOfGateway_glBegin]byte)(gpGateway_glBegin)[:])[11] = byte((dwGLBegin & 0xFF000000) >> 24)

				iEngineVersion := GetEngineVersion()
				if iEngineVersion == kEngineBuildUndefined {
					return false
				} else if iEngineVersion == kEngineBuildv3266 {
					//01D7BB2E | 890D EC897E02 | mov dword ptr ds:[<&glBegin>],ecx | CS1.6 build v3266
					gpQGLBegin = uintptr(0x027E89EC)
				} else if iEngineVersion == kEngineBuildv4554 {
					szHwDll := C.CString("hw.dll")
					hHwDll := C.LoadLibraryA(szHwDll)
					C.free(unsafe.Pointer(szHwDll))
					if hHwDll != 0 {
						pQGL_Init := FindPattern(uintptr(hHwDll), 0x1c1538,
							[]byte("\x55\x8B\xEC\x81\xEC\x00\x00\x00\x00\x83\x7D\x08\x00\x75\x07\xC7\x45\x00\x00\x00\x00\x00\x68\x00\x00\x00\x00\x8B\x45\x0C\x50\xE8\x00\x00\x00\x00\x83\xC4\x08\x85\xC0\x0F\x84\x00\x00\x00\x00\xC7\x45\x00\x00\x00\x00\x00\xD9\x45\xFC\x83\xEC\x08\xDD\x1C\x24\x68\x00\x00\x00\x00\x68\x00\x00\x00\x00\x8D\x8D\x00\x00\x00\x00\x51\xE8\x00\x00\x00\x00\x83\xC4\x14\x8D\x95\x00\x00\x00\x00\x52\xE8\x00\x00\x00\x00\x83\xC4\x04\xD9\x45\xFC\x83\xEC\x08\xDD\x1C\x24\x68\x00\x00\x00\x00\x68\x00\x00\x00\x00\x8D\x85\x00\x00\x00\x00\x50\xE8\x00\x00\x00\x00\x83\xC4\x14\x8D\x8D\x00\x00\x00\x00\x51\xE8\x00\x00\x00\x00\x83\xC4\x04\xD9\x45\xFC\x83\xEC\x08\xDD\x1C\x24\x68\x00\x00\x00\x00\x68\x00\x00\x00\x00\x8D\x95\x00\x00\x00\x00\x52\xE8\x00\x00\x00\x00\x83\xC4\x14\x8D\x85\x00\x00\x00\x00\x50\xE8\x00\x00\x00\x00\x83\xC4\x04\x68\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\xC4\x04\x8B\x4D\x08\x51\xE8\x00\x00\x00\x00\x83\xC4\x04\xA3\x00\x00\x00\x00\x83\x3D\x00\x00\x00\x00\x00\x75\x49\xC7\x85\x00\x00\x00\x00\x00\x00\x00\x00\x6A\x00\x6A\x00\x8D\x95\x00\x00\x00\x00\x52\x68\x00\x00\x00\x00\xFF\x15\x00\x00\x00\x00\x50\x6A\x00\x68\x00\x00\x00\x00\xFF\x15\x00\x00\x00\x00\x8B\x85\x00\x00\x00\x00\x50\x68\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\xC4\x08\x33\xC0\xE9\x00\x00\x00\x00\x68\x00\x00\x00\x00\x8B\x0D\x00\x00\x00\x00\x51\xFF\x15\x00\x00\x00\x00\xA3\x00\x00\x00\x00\x8B\x15\x00\x00\x00\x00\x89\x15\x00\x00\x00\x00\x68\x00\x00\x00\x00\xA1\x00\x00\x00\x00\x50\xFF\x15\x00\x00\x00\x00\xA3\x00\x00\x00\x00\x8B\x0D\x00\x00\x00\x00\x89\x0D\x00\x00\x00\x00\x68\x00\x00\x00\x00\x8B\x15\x00\x00\x00\x00\x52\xFF\x15\x00\x00\x00\x00\xA3\x00\x00\x00\x00\xA1\x00\x00\x00\x00\xA3\x00\x00\x00\x00\x68\x00\x00\x00\x00\x8B\x0D\x00\x00\x00\x00\x51\xFF\x15\x00\x00\x00\x00\xA3\x00\x00\x00\x00\x8B\x15\x00\x00\x00\x00\x89\x15\x00\x00\x00\x00\x68\x00\x00\x00\x00\xA1\x00\x00\x00\x00\x50"),
							"xxxxx????xxxxxxxx?????x????xxxxx????xxxxxxx????xx?????xxxxxxxxxx????x????xx????xx????xxxxx????xx????xxxxxxxxxxxxx????x????xx????xx????xxxxx????xx????xxxxxxxxxxxxx????x????xx????xx????xxxxx????xx????xxxx????x????xxxxxxxx????xxxx????xx?????xxxx????????xxxxxx????xx????xx????xxxx????xx????xx????xx????x????xxxxxx????x????xx????xxx????x????xx????xx????x????x????xxx????x????xx????xx????x????xx????xxx????x????x????x????x????xx????xxx????x????xx????xx????x????x????x")
						if pQGL_Init != 0 {
							gpQGLBegin = pQGL_Init + (0x01D86CFE - 0x01D86B20 + 2)
							gpQGLBegin = *(*uintptr)(unsafe.Pointer(gpQGLBegin))
						}
					}
				} else if iEngineVersion == kEngineBuildvSteam {
					szHwDll := C.CString("hw.dll")
					hHwDll := C.LoadLibraryA(szHwDll)
					C.free(unsafe.Pointer(szHwDll))
					if hHwDll != 0 {
						pQGL_Init := FindPattern(uintptr(hHwDll), 0x190ba0,
							[]byte("\x55\x8B\xEC\xC7\x05\x00\x00\x00\x00\x00\x00\x00\x00\x68\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\xC4\x04\xA3\x00\x00\x00\x00\xA1\x00\x00\x00\x00\xA3\x00\x00\x00\x00\x68\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\xC4\x04\xA3\x00\x00\x00\x00\x8B\x0D\x00\x00\x00\x00\x89\x0D\x00\x00\x00\x00\x68\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\xC4\x04\xA3\x00\x00\x00\x00\x8B\x15\x00\x00\x00\x00\x89\x15\x00\x00\x00\x00\x68\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\xC4\x04\xA3\x00\x00\x00\x00\xA1\x00\x00\x00\x00\xA3\x00\x00\x00\x00\x68\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\xC4\x04\xA3\x00\x00\x00\x00\x8B\x0D\x00\x00\x00\x00\x89\x0D\x00\x00\x00\x00\x68\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\xC4\x04\xA3\x00\x00\x00\x00\x8B\x15\x00\x00\x00\x00\x89\x15\x00\x00\x00\x00\x68\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\xC4\x04\xA3\x00\x00\x00\x00\xA1\x00\x00\x00\x00\xA3\x00\x00\x00\x00\x68\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\xC4\x04\xA3\x00\x00\x00\x00\x8B\x0D\x00\x00\x00\x00\x89\x0D\x00\x00\x00\x00\x68\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\xC4\x04\xA3\x00\x00\x00\x00\x8B\x15\x00\x00\x00\x00\x89\x15\x00\x00\x00\x00\x68\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\xC4\x04\xA3\x00\x00\x00\x00\xA1\x00\x00\x00\x00\xA3\x00\x00\x00\x00\x68\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\xC4\x04"),
							"xxxxx????????x????x????xxxx????x????x????x????x????xxxx????xx????xx????x????x????xxxx????xx????xx????x????x????xxxx????x????x????x????x????xxxx????xx????xx????x????x????xxxx????xx????xx????x????x????xxxx????x????x????x????x????xxxx????xx????xx????x????x????xxxx????xx????xx????x????x????xxxx????x????x????x????x????xxx")
						if pQGL_Init != 0 {
							gpQGLBegin = pQGL_Init + (0x01D72579 - 0x01D724E0 + 2)
							gpQGLBegin = *(*uintptr)(unsafe.Pointer(gpQGLBegin))
						}
					}
				}
				if gpQGLBegin == 0 {
					return false
				}
				*(*uintptr)(unsafe.Pointer(gpQGLBegin)) = uintptr(gpGateway_glBegin)
				return true
			}
		}
	}
	return false
}
